{"version":3,"sources":["CurvedTabBar.tsx"],"names":["React","memo","useCallback","useMemo","isEqual","View","Animated","useAnimatedProps","useDerivedValue","useSafeAreaFrame","useSafeAreaInsets","Svg","Path","sharedEq","sharedTiming","useInterpolate","withSharedTransition","RNShadow","HEIGHT_HOLE","TAB_BAR_HEIGHT","ButtonTab","Dot","styles","AnimatedPath","createAnimatedComponent","CurvedTabBarComponent","props","routes","selectedIndex","barWidth","duration","dotColor","tabBarColor","titleShown","isRtl","navigationIndex","dotSize","SIZE_DOT","barHeight","bottom","width","actualBarWidth","widthTab","length","inputRange","map","_","index","reverse","outputRange","actualBarHeight","indexAnimated","value","renderButtonTab","key","title","configs","progress","xPath","pathProps","centerHoleX","d","containerStyle","height","rowTab","container","svg","CurvedTabBar"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { memo, useCallback, useMemo } from 'react';\nimport isEqual from 'react-fast-compare';\nimport { StyleProp, View, ViewStyle } from 'react-native';\nimport Animated, {\n  useAnimatedProps,\n  useDerivedValue,\n} from 'react-native-reanimated';\nimport {\n  useSafeAreaFrame,\n  useSafeAreaInsets,\n} from 'react-native-safe-area-context';\nimport Svg, { Path, PathProps } from 'react-native-svg';\nimport {\n  sharedEq,\n  sharedTiming,\n  useInterpolate,\n  withSharedTransition,\n} from '../AnimatedHelper';\nimport { RNShadow } from '../RNShadow';\nimport type { TabBarViewProps, TabRoute } from '../types';\nimport { HEIGHT_HOLE, TAB_BAR_HEIGHT } from './constant';\nimport { ButtonTab } from './item/ButtonTabItem';\nimport { Dot } from './item/Dot';\nimport { styles } from './style';\n\nconst AnimatedPath = Animated.createAnimatedComponent(Path);\n\nconst CurvedTabBarComponent = (props: TabBarViewProps) => {\n  // props\n  const {\n    routes,\n    selectedIndex,\n    barWidth,\n    duration,\n    dotColor,\n    tabBarColor,\n    titleShown,\n    isRtl,\n    navigationIndex,\n    dotSize: SIZE_DOT,\n    barHeight = TAB_BAR_HEIGHT,\n  } = props;\n  // state\n  const { bottom } = useSafeAreaInsets();\n  const { width } = useSafeAreaFrame();\n  const actualBarWidth = useMemo<number>(\n    () => barWidth || width,\n    [barWidth, width]\n  );\n  const widthTab = useMemo(\n    () => actualBarWidth / routes.length,\n    [routes, actualBarWidth]\n  );\n  const inputRange = useMemo(\n    () =>\n      isRtl\n        ? routes.map((_: any, index: number) => index).reverse()\n        : routes.map((_: any, index: number) => index),\n    [isRtl, routes]\n  );\n\n  const outputRange = useMemo(\n    () =>\n      routes.map(\n        (_: any, index: number) => (index / routes.length) * actualBarWidth\n      ),\n    [routes, actualBarWidth]\n  );\n  const actualBarHeight = useMemo<number>(\n    () => barHeight + bottom,\n    [barHeight, bottom]\n  );\n  const indexAnimated = useDerivedValue(() =>\n    sharedTiming(selectedIndex.value, { duration })\n  );\n\n  // func\n  const renderButtonTab = useCallback(\n    ({ key, title, ...configs }: TabRoute, index: number) => {\n      return (\n        <ButtonTab\n          focused={index === selectedIndex.value}\n          width={actualBarWidth}\n          key={key}\n          title={title}\n          titleShown={titleShown}\n          indexAnimated={indexAnimated}\n          countTab={routes.length}\n          selectedIndex={selectedIndex}\n          index={index}\n          {...configs}\n        />\n      );\n    },\n    [indexAnimated, routes.length, selectedIndex, titleShown, actualBarWidth]\n  );\n\n  // reanimated\n\n  const progress = withSharedTransition(sharedEq(selectedIndex, indexAnimated));\n\n  const xPath = useInterpolate(indexAnimated, inputRange, outputRange);\n\n  // path\n  const pathProps = useAnimatedProps<PathProps>(() => {\n    const centerHoleX = xPath.value + widthTab / 2;\n    return {\n      d: `M0,0 L${centerHoleX - SIZE_DOT},0\n      C${centerHoleX - SIZE_DOT * 0.5},0 ${\n        centerHoleX - SIZE_DOT * 0.75\n      },${HEIGHT_HOLE} ${centerHoleX},${HEIGHT_HOLE} \n      C${centerHoleX + SIZE_DOT * 0.75},${HEIGHT_HOLE} ${\n        centerHoleX + SIZE_DOT * 0.5\n      },0 ${centerHoleX + SIZE_DOT} 0 \n      L${actualBarWidth * 2},0 L ${\n        actualBarWidth * 2\n      },${actualBarHeight} L 0,${actualBarHeight} Z\n      `,\n    };\n  }, [actualBarWidth, widthTab, SIZE_DOT, actualBarHeight]);\n\n  // style\n  const containerStyle = useMemo<StyleProp<ViewStyle>>(\n    () => [\n      {\n        height: actualBarHeight,\n        width: actualBarWidth,\n      },\n    ],\n    [actualBarHeight, actualBarWidth]\n  );\n  const rowTab = useMemo<StyleProp<ViewStyle>>(\n    () => [\n      {\n        width: actualBarWidth,\n        height: actualBarHeight,\n      },\n    ],\n    [actualBarHeight, actualBarWidth]\n  );\n\n  return (\n    <>\n      <RNShadow style={[styles.container, containerStyle]}>\n        <Svg\n          width={actualBarWidth}\n          height={actualBarHeight}\n          style={[styles.svg]}\n        >\n          <AnimatedPath\n            animatedProps={pathProps}\n            translateY={3}\n            fill={tabBarColor}\n            stroke={'transparent'}\n            strokeWidth={0}\n          />\n        </Svg>\n      </RNShadow>\n      <View style={[styles.rowTab, rowTab]}>\n        <Dot\n          navigationIndex={navigationIndex}\n          isRtl={isRtl}\n          dotColor={dotColor}\n          dotSize={SIZE_DOT}\n          barHeight={actualBarHeight}\n          width={actualBarWidth}\n          selectedIndex={indexAnimated}\n          routes={routes}\n          progress={progress}\n        />\n        {routes.map(renderButtonTab)}\n      </View>\n    </>\n  );\n};\n\nexport const CurvedTabBar = memo(CurvedTabBarComponent, isEqual);\n"]}